#–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ API
#–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–∞–ø—Ä–æ—Å—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ ({"command": "send_email", "data": {...}}).
# –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: send_email, export_csv, notify_slack, –Ω–æ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è.
# –ü–∞—Ç—Ç–µ—Ä–Ω—ã:
# Command ‚Äî –∫–∞–∂–¥–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç —Å–≤–æ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ
#
# Factory ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω—É–∂–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∏–º–µ–Ω–∏
#
# Registry ‚Äî —Ö—Ä–∞–Ω–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–º—è ‚Üí –∫–ª–∞—Å—Å

class CommandHandler:
    def execute(self, data):
        raise NotImplementedError()

class SendEmail(CommandHandler):
    def execute(self, data):
        print(f"üìß Sending email to {data['to']}")

class ExportCSV(CommandHandler):
    def execute(self, data):
        print(f"üíæ Exporting {data['table']} to CSV")

class NotifySlack(CommandHandler):
    def execute(self, data):
        print(f"üîî Slack notification: {data['message']}")

# Factory + Registry
registry = {
    "send_email": SendEmail,
    "export_csv": ExportCSV,
    "notify_slack": NotifySlack
}

def handle_command(command_dict):
    cmd_name = command_dict["command"]
    cmd_class = registry.get(cmd_name)
    if not cmd_class:
        raise ValueError(f"Unknown command: {cmd_name}")
    handler = cmd_class()
    handler.execute(command_dict["data"])
